/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package parabitccasbharat;

import java.awt.event.ItemEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class PbtNewAppointment extends javax.swing.JFrame {

    ParabitDBC dbc = new ParabitDBC();
    String states, district, city;
    String fetchceid;
    ArrayList<String> arraygeid = new ArrayList<>();
    String geid;
    int fetchgrade;
    DefaultTableModel model;
    boolean isClickable = false;

    /**
     * Creates new form PbtNewAppointment
     *
     * @param data
     */
    public PbtNewAppointment(PbtEmpData data) {
        initComponents();
        //data.getEmpceid();
        empList(data);
        fillStates();
    }

    private void empList(PbtEmpData data) {
        model = (DefaultTableModel) tabemplst.getModel();
        fetchgrade = data.getEmpgrade();
        fetchceid = data.getEmpceid();
        int sno = 0;
        String qry = "SELECT * FROM `pbtemployeetable` WHERE Grade = " + (fetchgrade + 1) + " and Status = 0";
        model.setRowCount(0);
        try {
            dbc.rs1 = dbc.stm.executeQuery(qry);
            while (dbc.rs1.next()) {
                sno = sno + 1;
                String ceid = dbc.rs1.getString("CEID");
                String empname = dbc.rs1.getString("EmpName");
                String grade = dbc.rs1.getString("Grade");
                String wrkexp = dbc.rs1.getString("WorkExp");
                geid = dbc.rs1.getString("GEID");
                arraygeid.add(geid);
                Object row[] = {sno, ceid, empname, grade, wrkexp};
                model.addRow(row);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    private void fillStates() {
        try {
            String qry = "SELECT Distinct States FROM `pbtstates5`";
            dbc.rs1 = dbc.stm.executeQuery(qry);
            while (dbc.rs1.next()) {
                states = dbc.rs1.getString("States");
                jcbstate.addItem(states);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabemplst = new javax.swing.JTable();
        jcbstate = new javax.swing.JComboBox<>();
        jcbdistrict = new javax.swing.JComboBox<>();
        jcbcity = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tabemplst.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SNo.", "CEID", "Emp Name", "Grade", "Work Experienc"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabemplst.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabemplstMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabemplst);

        jcbstate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--State--" }));
        jcbstate.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbstateItemStateChanged(evt);
            }
        });

        jcbdistrict.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--District--" }));
        jcbdistrict.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbdistrictItemStateChanged(evt);
            }
        });
        
        jcbcity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--City--" }));
        jcbcity.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbcityItemStateChanged(evt);
            }
        });
        
        jLabel1.setText("PbtNewAppointment");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 786, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jcbstate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jcbdistrict, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addGap(55, 55, 55)
                .addComponent(jcbcity, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(143, 143, 143))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbdistrict, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbcity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbstate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabemplstMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabemplstMouseClicked
        String qry = null;
        int index = tabemplst.getSelectedRow();
        int x = Integer.parseInt(model.getValueAt(index, 0).toString());
        String ceid = model.getValueAt(index, 1).toString();
        String grade = model.getValueAt(index, 3).toString();
        switch (grade) {
            case "2" :
                qry = "UPDATE pbtemployeetable SET Status = 1 , CRepEmpID = '"+fetchceid+"',AreaState = '" + jcbstate.getSelectedItem() + "' , AreaDist = 'ALL' , AreaCity = 'ALL' , CEID = '"+arraygeid.get(x-1)+grade+"' WHERE GEID = '"+arraygeid.get(x-1)+"'";
                break;
            case "3":
                qry = "UPDATE pbtemployeetable SET Status = 1 , CRepEmpID = '"+fetchceid+"',AreaState = '" + jcbstate.getSelectedItem() + "' , AreaDist = '"+jcbdistrict.getSelectedItem()+"' , AreaCity = 'ALL' , CEID = '"+arraygeid.get(x-1)+grade+"' WHERE GEID = '"+arraygeid.get(x-1)+"'";
                break;
            case "4":
                qry = "UPDATE pbtemployeetable SET Status = 1 , CRepEmpID = '"+fetchceid+"',AreaState = '" + jcbstate.getSelectedItem() + "' , AreaDist = '"+jcbdistrict.getSelectedItem()+"' , AreaCity = '"+jcbcity.getSelectedItem()+"' , CEID = '"+arraygeid.get(x-1)+grade+"' WHERE GEID = '"+arraygeid.get(x-1)+"'";
                break;
        }
        try {
            dbc.stm.executeUpdate(qry);
            JOptionPane.showMessageDialog(null, "Appointed");
            model.removeRow(tabemplst.getSelectedRow());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        
    }//GEN-LAST:event_tabemplstMouseClicked

    private void jcbstateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbstateItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            try {
                isClickable = false;
                String qry = "SELECT Distinct District FROM `pbtstates5` WHERE States = '" + jcbstate.getSelectedItem() + "'";
                dbc.rs1 = dbc.stm.executeQuery(qry);
                jcbdistrict.removeAllItems();
                while (dbc.rs1.next()) {
                    district = dbc.rs1.getString("District");
                    jcbdistrict.addItem(district);
                    System.out.println(district);
                }
                isClickable = true;
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_jcbstateItemStateChanged

    private void jcbdistrictItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbdistrictItemStateChanged
        if (isClickable) {
            try {
                String qry = "SELECT Distinct SubDist FROM `pbtstates5` WHERE District = '" + jcbdistrict.getSelectedItem() + "'";
                dbc.rs1 = dbc.stm.executeQuery(qry);
                jcbcity.removeAllItems();
                while (dbc.rs1.next()) {
                    city = dbc.rs1.getString("SubDist");
                    jcbcity.addItem(city);
                    System.out.println(city + "city");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_jcbdistrictItemStateChanged

    private void jcbcityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbcityItemStateChanged
        
    }//GEN-LAST:event_jcbcityItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcbcity;
    private javax.swing.JComboBox<String> jcbdistrict;
    private javax.swing.JComboBox<String> jcbstate;
    private javax.swing.JTable tabemplst;
    // End of variables declaration//GEN-END:variables
}
