/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package parabitccasbharat;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author ASUS
 */
public class PbtNewAppointment extends javax.swing.JFrame {

    ParabitDBC dbc = new ParabitDBC();
    DefaultTableModel model;

    /**
     * Creates new form PbtNewAppointment
     *
     * @param data
     */
    public PbtNewAppointment(PbtEmpData data) {
        initComponents();
        empList(data);
        fillStates();
        fillDistrict();
        fillCity();
    }

    private void empList(PbtEmpData data) {
        model = (DefaultTableModel) tabemplst.getModel();
        int fetchgrade = data.getEmpgrade();
        int sno = 0;
        System.out.print("Grade" + fetchgrade + 1 + "fine");
        String qry = "SELECT * FROM `pbtemployeetable` WHERE Grade = " + (fetchgrade + 1) + " and Status = 0";
        model.setRowCount(0);
        try {
            dbc.rs1 = dbc.stm.executeQuery(qry);
            while (dbc.rs1.next()) {
                sno = sno + 1;
                String ceid = dbc.rs1.getString("CEID");
                String empname = dbc.rs1.getString("EmpName");
                String grade = dbc.rs1.getString("Grade");
                String wrkexp = dbc.rs1.getString("WorkExp");
                Object row[] = {sno, ceid, empname, grade, wrkexp};
                model.addRow(row);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    private void fillStates() {
        try {
            String qry = "SELECT Distinct States FROM `pbtstates5`";
            dbc = new ParabitDBC();
            dbc.rs1 = dbc.stm.executeQuery(qry);
            while (dbc.rs1.next()) {
                String states = dbc.rs1.getString("States");
                jcbstate.addItem(states);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }

    private void fillDistrict() {
        try {
            String qry = "SELECT Distinct District FROM `pbtstates5`";
            dbc = new ParabitDBC();
            dbc.rs1 = dbc.stm.executeQuery(qry);
            while (dbc.rs1.next()) {
                String district = dbc.rs1.getString("District");
                jcbdistrict.addItem(district);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }

    private void fillCity() {
        try {
            String qry = "SELECT Distinct SubDist FROM `pbtstates5`";
            dbc = new ParabitDBC();
            dbc.rs1 = dbc.stm.executeQuery(qry);
            while (dbc.rs1.next()) {
                String city = dbc.rs1.getString("SubDist");
                jcbcity.addItem(city);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabemplst = new javax.swing.JTable();
        jcbstate = new javax.swing.JComboBox<>();
        jcbdistrict = new javax.swing.JComboBox<>();
        jcbcity = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tabemplst.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SNo.", "CEID", "Emp Name", "Grade", "Work Experienc"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabemplst.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabemplstMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabemplst);

        jcbstate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--State--" }));
        jcbstate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcbstateMouseClicked(evt);
            }
        });
        jcbstate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbstateActionPerformed(evt);
            }
        });

        jcbdistrict.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--District--" }));
        jcbdistrict.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcbdistrictMouseClicked(evt);
            }
        });
        jcbdistrict.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbdistrictActionPerformed(evt);
            }
        });

        jcbcity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--City--" }));
        jcbcity.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcbcityMouseClicked(evt);
            }
        });
        jcbcity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbcityActionPerformed(evt);
            }
        });

        jLabel1.setText("PbtNewAppointment");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 786, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jcbstate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jcbdistrict, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addGap(55, 55, 55)
                .addComponent(jcbcity, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(143, 143, 143))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbdistrict, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbcity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbstate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbstateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbstateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbstateActionPerformed

    private void jcbdistrictActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbdistrictActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbdistrictActionPerformed

    private void jcbcityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbcityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbcityActionPerformed

    private void tabemplstMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabemplstMouseClicked
        int index = tabemplst.getSelectedRow();
        String s = model.getValueAt(index, 1).toString();
        String qry = "UPDATE pbtemployeetable SET Status = 1 WHERE CEID =" + s;
        dbc = new ParabitDBC();
        try {
            int i = dbc.stm.executeUpdate(qry);
            //System.out.print(i);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        JOptionPane.showMessageDialog(null, "Appointed");
        model.removeRow(tabemplst.getSelectedRow());
    }//GEN-LAST:event_tabemplstMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcbcity;
    private javax.swing.JComboBox<String> jcbdistrict;
    private javax.swing.JComboBox<String> jcbstate;
    private javax.swing.JTable tabemplst;
    // End of variables declaration//GEN-END:variables

}
